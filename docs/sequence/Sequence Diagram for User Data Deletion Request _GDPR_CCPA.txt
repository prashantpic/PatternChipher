sequenceDiagram
    actor "Admin / Operator" as adminactor
    participant "UserAccountManagementFunction" as REPOPATT011
    participant "CloudDataEndpoints" as REPOPATT007
    participant "AuthenticationServiceEndpoints" as REPOPATT006
    participant "Audit Logging Service" as loggingservice

    adminactor-REPOPATT011: 1. HTTPS Request: deleteUserData(firebaseUid)
    activate REPOPATT011

    note over REPOPATT011: This flow is triggered by a privileged process, not directly by the end-user. The function must authenticate and authorize the caller.
    REPOPATT011-REPOPATT011: 1.1. Validate request (e.g., check admin privileges)

    REPOPATT011-REPOPATT007: 1.2. delete(userProfile/{firebaseUid})
    activate REPOPATT007
    REPOPATT007--REPOPATT011: Success
    deactivate REPOPATT007

    REPOPATT011-REPOPATT007: 1.3. query(leaderboardEntries where userId == firebaseUid)
    activate REPOPATT007
    REPOPATT007--REPOPATT011: [LeaderboardEntry IDs]
    deactivate REPOPATT007

    loop 1.4 [For each returned entry]
        note right of REPOPATT007: Deletions of multiple leaderboard entries should be performed as a single batch write for efficiency and atomicity.
        REPOPATT011-REPOPATT007: 1.4.1. delete(leaderboardEntry/{entryId})
        activate REPOPATT007
        REPOPATT007--REPOPATT011: Success
        deactivate REPOPATT007
    end

    REPOPATT011-REPOPATT006: 1.5. deleteUser(firebaseUid)
    activate REPOPATT006
    note right of REPOPATT006: This operation uses the Firebase Admin SDK to permanently delete the user's authentication credentials.
    REPOPATT006--REPOPATT011: Success
    deactivate REPOPATT006

    REPOPATT011-loggingservice: 1.6. logAuditEvent(type: 'UserDataDeletion', outcome: 'Success', details: {userId})
    activate loggingservice
    deactivate loggingservice

    REPOPATT011--adminactor: 2. 200 OK: User data deleted successfully
    deactivate REPOPATT011

    note over adminactor, loggingservice: A comprehensive error handling block (alt) should wrap the entire process. If any step fails, the failure is logged and a 500 error is returned.