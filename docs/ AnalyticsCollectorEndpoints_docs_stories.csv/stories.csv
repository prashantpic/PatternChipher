story_id,epic,title,user_role,description,priority,story_points,dependencies,acceptance_criteria_1,acceptance_criteria_2,acceptance_criteria_3,technical_tasks,definition_of_done
US-001,EPIC-ANA-001,Define Analytics Service Configuration,Data Analyst,As a Data Analyst, I want a single source of truth for the analytics service configuration, so that I understand the data retention, export, and consent policies.,Must Have,3,"","Given the SDS, When the `config/analytics_configuration.yaml` is created, Then it contains the `data_retention` and `bigquery_export` sections exactly as specified.","Given the SDS, When the `config/analytics_configuration.yaml` is created, Then it contains the `default_consent_settings` section with correct region and storage state mappings.","Given the SDS, When the `config/analytics_configuration.yaml` is created, Then it contains the `child_directed_treatment` policy description.","**Create analytics_configuration.yaml**: Create and populate the `config/analytics_configuration.yaml` file. This file must include sections for `data_retention`, `bigquery_export`, `default_consent_settings`, and `child_directed_treatment` as specified in the SDS. Ensure all keys and values match the SDS exactly.","The `analytics_configuration.yaml` file is merged into the main branch and matches the SDS specification."
US-002,EPIC-ANA-001,Define Custom Event Schemas,Developer,As a Developer, I want a strict data contract for all custom analytics events, so that I can implement tracking in the game client with confidence that the data will be valid.,Must Have,5,"","Given the SDS, When the `schemas/custom_events.json` file is inspected, Then it exists and is a valid JSON array.","Given the `schemas/custom_events.json` file, When its contents are reviewed, Then it contains complete and accurate definitions for all 8 specified events (level_start, level_complete, etc.).","Given a specific event definition in `custom_events.json`, When its parameters are checked, Then each parameter's `paramName`, `dataType`, and `description` precisely matches the SDS.","**Create custom_events.json Schema**: Create the `schemas/custom_events.json` file. Populate it with the JSON array of all specified game events: `level_start`, `level_complete`, `level_fail`, `level_quit`, `hint_used`, `undo_used`, `setting_changed`, and `tutorial_step`. Ensure each event object includes `eventName`, `description`, and a `parameters` array with the correct `paramName`, `dataType`, and `description` for each parameter.","The `custom_events.json` file is merged into the main branch and contains all events and parameters as defined in the SDS."
US-003,EPIC-ANA-001,Define User Property Schemas,Data Analyst,As a Data Analyst, I want a defined schema for user-level properties, so that I can create meaningful user segments for cohort analysis and targeted reporting.,Must Have,2,"","Given the SDS, When the `schemas/user_properties.json` file is inspected, Then it exists and is a valid JSON array.","Given the `schemas/user_properties.json` file, When its contents are reviewed, Then it contains complete and accurate definitions for all 5 specified user properties (player_first_open_date, etc.).","Given a specific property definition, When its fields are checked, Then its `propertyName`, `dataType`, and `description` precisely matches the SDS.","**Create user_properties.json Schema**: Create the `schemas/user_properties.json` file. Populate it with the JSON array of all specified user properties: `player_first_open_date`, `highest_level_pack_unlocked`, `total_stars_collected`, `player_consent_status`, and `last_played_puzzle_type`. Ensure each property object includes `propertyName`, `dataType`, and `description`.","The `user_properties.json` file is merged into the main branch and contains all properties as defined in the SDS."
US-004,EPIC-ANA-001,Define Privacy Compliance Rules for Data Points,Compliance Officer,As a Compliance Officer, I want an auditable map that explicitly links every data point to a privacy rule, so that I can verify that our data collection adheres to regulations like GDPR and COPPA.,Must Have,5,"US-002,US-003","Given the repository, When the `schemas/privacy_compliance_map.json` file is inspected, Then it exists, is valid JSON, and contains the `compliance_actions`, `parameter_map`, and `user_property_map` keys.","Given the `privacy_compliance_map.json` file, When the `parameter_map` is reviewed, Then it contains an entry for every single parameter defined in `custom_events.json` with the correct compliance action.","Given the `privacy_compliance_map.json` file, When the `user_property_map` is reviewed, Then it contains an entry for every property defined in `user_properties.json` with the correct compliance action.","**Create privacy_compliance_map.json**: Create the `schemas/privacy_compliance_map.json` file. It must contain the top-level keys: `compliance_actions`, `parameter_map`, and `user_property_map`. Populate the maps with every parameter from `custom_events.json` and every property from `user_properties.json`, assigning the correct compliance action (`ALLOW` or `OMIT_IF_UNCONSENTED`) as defined in the SDS.","The `privacy_compliance_map.json` file is merged into the main branch and correctly maps every defined parameter and property to a compliance rule."
US-005,EPIC-ANA-002,Implement Automated Linting for Config Files,Development Team,As a member of the Development Team, I want to automatically validate the basic syntax of all configuration files on every change, so that malformed files are prevented from being merged and breaking our data contracts.,Must Have,2,"","Given a pull request is opened, When it contains changes to a YAML or JSON file, Then a CI workflow is automatically triggered to validate syntax.","Given the CI workflow is running, When a YAML or JSON file has a syntax error, Then the workflow fails and blocks the merge.","Given all YAML and JSON files are syntactically correct, When the CI workflow runs, Then the linting step passes successfully.","**Set up YAML and JSON Linting**: Configure a CI workflow (e.g., using GitHub Actions) that runs a linter against all `.yaml` and `.json` files in the repository. This ensures basic syntax correctness and formatting standards.","A CI workflow exists that automatically runs a linter on all YAML/JSON files for every pull request, failing the build on any syntax error."
US-006,EPIC-ANA-002,Implement Automated Cross-Schema Consistency Checks,Data Team,As a member of the Data Team, I want to automatically verify that all defined data points have a corresponding privacy rule, so that we prevent accidental omission of privacy controls and ensure continuous compliance.,Must Have,8,"US-002,US-003,US-004,US-005","Given the CI pipeline, When it runs on a pull request, Then it executes a custom validation script after the basic linting step.","Given a new event parameter is added to `custom_events.json` but is missing from `privacy_compliance_map.json`, When the CI pipeline runs, Then the build fails with a clear error message identifying the missing mapping.","Given a parameter or property exists in a schema file, When it is missing from the compliance map (or vice-versa), Then the CI build fails with an error indicating the inconsistency.","**Implement Cross-Schema Consistency Check**: Create a script to be run in the CI pipeline that performs a consistency check. The script must verify that every key in `privacy_compliance_map.json` under `parameter_map` and `user_property_map` exists in either `custom_events.json` or `user_properties.json`. This prevents orphaned or misspelled privacy rules.","A validation script is integrated into the CI pipeline that fails the build if any inconsistency is detected between the schema files and the privacy compliance map."
US-007,EPIC-ANA-002,Create Comprehensive Repository README,New Contributor,As a New Contributor, I want to quickly understand the purpose and structure of the analytics repository by reading a single document, so that I can contribute effectively with minimal ramp-up time.,Should Have,3,"","Given I am viewing the repository root, When I open the `README.md` file, Then it clearly explains the repository's purpose as the single source of truth for analytics contracts.","Given I am reading the `README.md`, When I look for file information, Then I find a description of the role of `analytics_configuration.yaml`, `custom_events.json`, `user_properties.json`, and `privacy_compliance_map.json`.","Given I am reading the `README.md`, When I need to know how to propose a change, Then I find a high-level overview of the change management and pull request process.","**Create README.md**: Write a comprehensive `README.md` file for the repository root. It should explain the purpose of the repository, describe the function of each file and directory, and outline the workflow for proposing and reviewing changes to the data contracts.","A `README.md` file exists in the repository root that clearly documents the repository's purpose, file structure, and contribution workflow."
US-008,EPIC-ANA-002,Establish a Formal Contribution Process,Contributor,As a Contributor, I want a formal, documented process for making changes to data contracts, so that all changes are consistent, well-vetted, and approved by the correct stakeholders.,Should Have,3,"","Given I want to propose a schema change, When I open the `CONTRIBUTING.md` file, Then I find a detailed, step-by-step guide for the required pull request process.","Given I am reading `CONTRIBUTING.md`, When I need to know who must approve a change, Then the roles and responsibilities for reviewing (e.g., client dev lead, data analyst lead) are clearly defined.","Given I am a reviewer, When I consult `CONTRIBUTING.md`, Then the definition of 'done' for a change, including passing all CI checks, is explicitly stated.","**Create CONTRIBUTING.md**: Write a `CONTRIBUTING.md` file that specifies the detailed process for making changes. It should define the pull request process, required reviewers (e.g., client dev lead, data analyst lead), and the definition of 'done' for a change to be merged.","A `CONTRIBUTING.md` file exists that details the pull request process, review requirements, and the definition of done for merging a change."